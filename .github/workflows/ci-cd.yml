name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: cr.yandex
  IMAGE_NAME: pds-consultant

jobs:
  # ========================================
  # ЭТАП 1: ПРОВЕРКИ И ТЕСТИРОВАНИЕ
  # ========================================
  test:
    name: Tests and Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format

      - name: Prepare .env for tests
        run: |
          cat > .env <<'EOF'
          TELEGRAM_BOT_TOKEN=dummy
          BOT_MODE=webhook
          DEV_PORT=8080
          WEBHOOK_SECRET=replace_me
          PUBLIC_BASE_URL=
          EOF

      - name: Run tests
        env:
          CI: true
        run: npm test

  # ========================================
  # ЭТАП 2: СБОРКА И ДЕПЛОЙ (только для main)
  # ========================================
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Yandex Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: json_key
          password: ${{ secrets.YC_DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Yandex Cloud
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH=$PATH:$HOME/yandex-cloud/bin

          echo '${{ secrets.YC_SA_JSON }}' > sa.json
          yc config set service-account-key sa.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

          yc serverless container revision deploy \
            --container-name ${{ secrets.YC_CONTAINER_NAME }} \
            --image ${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.IMAGE_NAME }}:latest \
            --service-account-id ${{ secrets.YC_SERVICE_ACCOUNT_ID }} \
            --environment "BOT_MODE=webhook,WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }},PUBLIC_BASE_URL=,TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" \
            --memory 256m \
            --cores 1 \
            --execution-timeout 30s \
            --concurrency 1

      - name: Cleanup
        if: always()
        run: rm -f sa.json
