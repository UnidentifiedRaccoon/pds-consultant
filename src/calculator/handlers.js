/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
 */

import {
  CALCULATOR_STEPS,
  CALCULATION_GOALS,
  createCalculatorSession,
  getCalculatorSession,
  updateCalculatorSession,
  deleteCalculatorSession,
} from './state.js';
import {
  validateGender,
  validateAge,
  validateIncome,
  validatePayoutYears,
  validateStartingCapital,
  validateTaxRate,
  validateYesNo,
  getErrorMessage,
} from './validators.js';
import {
  askNextQuestion,
  showGoalSelection,
  handleTooManyErrors,
  getNextStep,
} from './questions.js';
import { createBackToMainKeyboard, MESSAGES } from '../bot/messages.js';
import { logger } from '../logger.js';

const MAX_RETRIES = 3;

/**
 * –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å—á–µ—Ç–∞
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function startCalculator(chatId, bot) {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
    createCalculatorSession(chatId);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —Ü–µ–ª–∏
    await showGoalSelection(chatId, bot);
  } catch (error) {
    logger.error({ chatId, error }, 'calculator:start:error');
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞');
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ü–µ–ª–∏
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {string} goal - –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ü–µ–ª—å
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handleGoalSelection(chatId, goal, bot) {
  const session = getCalculatorSession(chatId);
  if (!session) {
    await startCalculator(chatId, bot);
    return;
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ü–µ–ª—å—é
  updateCalculatorSession(chatId, { goal });

  if (goal === CALCULATION_GOALS.ADDITIONAL_PAYMENT) {
    // –ù–∞—á–∏–Ω–∞–µ–º –ø–æ—à–∞–≥–æ–≤—ã–π –æ–ø—Ä–æ—Å
    await askNextQuestion(chatId, bot, session);
  } else {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π
    await bot.sendMessage(chatId, MESSAGES.FEATURE_IN_DEVELOPMENT);
    const keyboard = createBackToMainKeyboard();
    await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard);
    deleteCalculatorSession(chatId);
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–æ–ø—Ä–æ—Å
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {string} input - –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handleUserInput(chatId, input, bot) {
  const session = getCalculatorSession(chatId);
  if (!session) {
    return false; // –ù–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
  }

  const { step, retries } = session;
  let validation = null;

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤–≤–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
  switch (step) {
    case CALCULATOR_STEPS.GENDER:
      validation = validateGender(input);
      break;
    case CALCULATOR_STEPS.AGE:
      validation = validateAge(input);
      break;
    case CALCULATOR_STEPS.INCOME:
      validation = validateIncome(input);
      break;
    case CALCULATOR_STEPS.PAYOUT_YEARS:
      validation = validatePayoutYears(input);
      break;
    case CALCULATOR_STEPS.STARTING_CAPITAL:
      validation = validateStartingCapital(input);
      break;
    case CALCULATOR_STEPS.TAX_RATE:
      validation = validateTaxRate(input);
      break;
    case CALCULATOR_STEPS.REINVEST_TAX:
      validation = validateYesNo(input);
      break;
    default:
      return false;
  }

  if (!validation.isValid) {
    // –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
    const newRetries = retries + 1;

    if (newRetries >= MAX_RETRIES) {
      // –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ—à–∏–±–æ–∫
      await handleTooManyErrors(chatId, bot);
      return true;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    updateCalculatorSession(chatId, { retries: newRetries });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –≤–æ–ø—Ä–æ—Å
    await bot.sendMessage(chatId, getErrorMessage(validation.error));
    await askNextQuestion(chatId, bot, session);
    return true;
  }

  // –í–∞–ª–∏–¥–Ω—ã–π –≤–≤–æ–¥ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
  const nextStep = getNextStep(step);
  const newData = { ...session.data, [step]: validation.value };

  updateCalculatorSession(chatId, {
    step: nextStep,
    data: newData,
    retries: 0, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  });

  await askNextQuestion(chatId, bot, { ...session, step: nextStep });
  return true;
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞ –≤—ã–ø–ª–∞—Ç
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {string} payoutMode - –†–µ–∂–∏–º –≤—ã–ø–ª–∞—Ç
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handlePayoutStartSelection(chatId, payoutMode, bot) {
  const session = getCalculatorSession(chatId);
  if (!session) {
    await startCalculator(chatId, bot);
    return;
  }

  const newData = { ...session.data, payoutStartMode: payoutMode };

  if (payoutMode === 'rule') {
    // –ü–æ –æ–±—â–µ–º—É –ø—Ä–∞–≤–∏–ª—É - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    const nextStep = getNextStep(CALCULATOR_STEPS.PAYOUT_START);
    updateCalculatorSession(chatId, {
      step: nextStep,
      data: newData,
      retries: 0,
    });
    await askNextQuestion(chatId, bot, { ...session, step: nextStep });
  } else {
    // –ß–µ—Ä–µ–∑ N –ª–µ—Ç - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç
    updateCalculatorSession(chatId, {
      step: CALCULATOR_STEPS.PAYOUT_YEARS,
      data: newData,
      retries: 0,
    });
    await askNextQuestion(chatId, bot, { ...session, step: CALCULATOR_STEPS.PAYOUT_YEARS });
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –î–∞/–ù–µ—Ç
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {boolean} value - –ó–Ω–∞—á–µ–Ω–∏–µ
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handleYesNoSelection(chatId, value, bot) {
  const session = getCalculatorSession(chatId);
  if (!session) {
    await startCalculator(chatId, bot);
    return;
  }

  const { step } = session;
  const newData = { ...session.data, [step]: value };
  const nextStep = getNextStep(step);

  updateCalculatorSession(chatId, {
    step: nextStep,
    data: newData,
    retries: 0,
  });

  await askNextQuestion(chatId, bot, { ...session, step: nextStep });
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –Ω–∞—á–∞–ª–æ —Å–Ω–∞—á–∞–ª–∞
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handleStartAgain(chatId, bot) {
  deleteCalculatorSession(chatId);
  await bot.sendMessage(chatId, MESSAGES.SESSION_RESET);
  await startCalculator(chatId, bot);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function handleCancel(chatId, bot) {
  deleteCalculatorSession(chatId);
  const keyboard = createBackToMainKeyboard();
  await bot.sendMessage(chatId, '–†–∞—Å—á—ë—Ç –æ—Ç–º–µ–Ω—ë–Ω. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard);
}

/**
 * –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞—Å—á–µ—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
export async function completeCalculation(chatId, bot) {
  const session = getCalculatorSession(chatId);
  if (!session) {
    await startCalculator(chatId, bot);
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
  await bot.sendMessage(chatId, MESSAGES.DATA_COLLECTION_COMPLETE);

  // –ó–∞–≥–ª—É—à–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ - –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const result = generateCalculationResult(session.data);
  await bot.sendMessage(chatId, result);

  // –£–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  deleteCalculatorSession(chatId);
  const keyboard = createBackToMainKeyboard();
  await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', keyboard);
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)
 * @param {Object} data - –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 * @returns {string} –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞
 */
function generateCalculationResult(data) {
  return `üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞:

üë§ –ü–æ–ª: ${data.gender === 'm' ? '–ú—É–∂—Å–∫–æ–π' : '–ñ–µ–Ω—Å–∫–∏–π'}
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${data.age} –ª–µ—Ç
üíµ –î–æ—Ö–æ–¥: ${data.income.toLocaleString()} —Ä—É–±/–º–µ—Å
üìÖ –ù–∞—á–∞–ª–æ –≤—ã–ø–ª–∞—Ç: ${data.payoutStartMode === 'rule' ? '–ü–æ –æ–±—â–µ–º—É –ø—Ä–∞–≤–∏–ª—É' : `–ß–µ—Ä–µ–∑ ${data.payoutYears} –ª–µ—Ç`}
üí∞ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª: ${data.startingCapital.toLocaleString()} —Ä—É–±
üìä –°—Ç–∞–≤–∫–∞ –ù–î–§–õ: ${data.taxRate}%
üîÑ –†–µ–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—á–µ—Ç–∞: ${data.reinvestTax ? '–î–∞' : '–ù–µ—Ç'}

üõ†Ô∏è –†–∞—Å—á—ë—Ç –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.`;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
 * @param {number} chatId - ID —á–∞—Ç–∞
 * @returns {boolean} true –µ—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
 */
export function isInCalculator(chatId) {
  const session = getCalculatorSession(chatId);
  return session !== null;
}
