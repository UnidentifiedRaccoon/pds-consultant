/**
 * FSM-–¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –ü–î–°-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –≤–≤–æ–¥–∞
 */

import {
  STATE_IDS,
  GENDER,
  TAX_RATE,
  CONTRIBUTION_MODE,
  createStateTransition,
  createValidationResult,
} from './types.js';
import {
  createGenderKeyboard,
  createContributionModeKeyboard,
  createBackToMainKeyboard,
  createConfirmDataInlineKeyboard,
} from '../keyboards.js';

/**
 * –í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–≤–æ–¥–∞
 */
export const validators = {
  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–∞
   */
  gender: (input) => {
    const normalized = input.toLowerCase().trim();
    if (normalized.includes('–º—É–∂') || normalized.includes('–º')) {
      return createValidationResult(true, GENDER.MALE);
    }
    if (normalized.includes('–∂–µ–Ω') || normalized.includes('–∂')) {
      return createValidationResult(true, GENDER.FEMALE);
    }
    return createValidationResult(false, null, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª: –º—É–∂—á–∏–Ω–∞ –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞');
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
   */
  age: (input) => {
    const age = parseInt(input.trim());
    if (isNaN(age) || age < 18 || age > 100) {
      return createValidationResult(false, null, '–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –¥–æ 100 –ª–µ—Ç');
    }
    return createValidationResult(true, age);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–µ–Ω–µ–∂–Ω–æ–π —Å—É–º–º—ã
   */
  money: (input, min = 0, max = 100000000) => {
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
    const cleaned = input.replace(/[\s,]/g, '');
    const amount = parseInt(cleaned);

    if (isNaN(amount) || amount < min || amount > max) {
      return createValidationResult(
        false,
        null,
        `–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –æ—Ç ${min.toLocaleString('ru-RU')} –¥–æ ${max.toLocaleString('ru-RU')} —Ä—É–±.`
      );
    }
    return createValidationResult(true, amount);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞
   */
  income: (input) => {
    return validators.money(input, 0, 10000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞
   */
  monthlyContribution: (input) => {
    return validators.money(input, 0, 2000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –µ–∂–µ–≥–æ–¥–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞
   */
  annualContribution: (input) => {
    return validators.money(input, 0, 24000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –∂–µ–ª–∞–µ–º–æ–π –≤—ã–ø–ª–∞—Ç—ã
   */
  desiredPayout: (input) => {
    return validators.money(input, 1000, 1000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞ –ª–µ—Ç
   */
  horizonYears: (input) => {
    const years = parseInt(input.trim());
    if (isNaN(years) || years < 2 || years > 40) {
      return createValidationResult(false, null, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–µ—Ç –æ—Ç 2 –¥–æ 40');
    }
    return createValidationResult(true, years);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞
   */
  startingCapital: (input) => {
    return validators.money(input, 0, 100000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –û–ü–°
   */
  opsTransfer: (input) => {
    return validators.money(input, 0, 100000000);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ –≤–∑–Ω–æ—Å–æ–≤
   */
  contributionMode: (input) => {
    const normalized = input.toLowerCase().trim();
    if (normalized.includes('–º–µ—Å—è—á') || normalized.includes('–µ–∂–µ–º–µ—Å—è—á')) {
      return createValidationResult(true, CONTRIBUTION_MODE.MONTHLY);
    }
    if (normalized.includes('–≥–æ–¥–æ–≤') || normalized.includes('–µ–∂–µ–≥–æ–¥–Ω')) {
      return createValidationResult(true, CONTRIBUTION_MODE.ANNUAL);
    }
    return createValidationResult(false, null, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º: –µ–∂–µ–º–µ—Å—è—á–Ω–æ –∏–ª–∏ –µ–∂–µ–≥–æ–¥–Ω–æ');
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏ –ù–î–§–õ
   */
  taxRate: (input) => {
    const rate = parseInt(input.replace('%', '').trim());
    const validRates = [
      TAX_RATE.RATE_13,
      TAX_RATE.RATE_15,
      TAX_RATE.RATE_18,
      TAX_RATE.RATE_20,
      TAX_RATE.RATE_22,
    ];

    if (isNaN(rate) || !validRates.includes(rate)) {
      return createValidationResult(
        false,
        null,
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞–≤–∫—É –ù–î–§–õ: 13%, 15%, 18%, 20% –∏–ª–∏ 22%'
      );
    }
    return createValidationResult(true, rate);
  },

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞/–Ω–µ—Ç
   */
  yesNo: (input) => {
    const normalized = input.toLowerCase().trim();
    if (normalized.includes('–¥–∞') || normalized.includes('yes') || normalized.includes('‚úÖ')) {
      return createValidationResult(true, true);
    }
    if (normalized.includes('–Ω–µ—Ç') || normalized.includes('no') || normalized.includes('‚ùå')) {
      return createValidationResult(true, false);
    }
    return createValidationResult(false, null, '–í—ã–±–µ—Ä–∏—Ç–µ: –¥–∞ –∏–ª–∏ –Ω–µ—Ç');
  },
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤–≤–æ–¥–∞
 * @param {Object} session - –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
export function getNextState(session, message) {
  const { state, data, errorCount } = session;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –æ—à–∏–±–æ–∫
  if (errorCount >= 3) {
    return createStateTransition(
      STATE_IDS.IDLE,
      '‚ùå –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ.',
      createBackToMainKeyboard()
    );
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
  if (message.toLowerCase().includes('–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é') || message.toLowerCase().includes('–æ—Ç–º–µ–Ω–∞')) {
    return createStateTransition(
      STATE_IDS.IDLE,
      'üè† –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
      createBackToMainKeyboard()
    );
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ —Å—Ü–µ–Ω–∞—Ä–∏—è–º
  switch (state) {
    case STATE_IDS.IDLE:
      return handleIdleState(message);

    case STATE_IDS.GENDER_SELECTION:
      return handleGenderSelection(message, data);

    case STATE_IDS.AGE_INPUT:
      return handleAgeInput(message, data);

    case STATE_IDS.INCOME_INPUT:
      return handleIncomeInput(message, data);

    case STATE_IDS.PAYOUT_START_SELECTION:
      return handlePayoutStartSelection(message, data);

    case STATE_IDS.PAYOUT_YEARS_INPUT:
      return handlePayoutYearsInput(message, data);

    case STATE_IDS.CONTRIBUTION_MODE_SELECTION:
      return handleContributionModeSelection(message, data);

    case STATE_IDS.MONTHLY_CONTRIBUTION_INPUT:
      return handleMonthlyContributionInput(message, data);

    case STATE_IDS.ANNUAL_CONTRIBUTION_INPUT:
      return handleAnnualContributionInput(message, data);

    case STATE_IDS.DESIRED_PAYOUT_INPUT:
      return handleDesiredPayoutInput(message, data);

    case STATE_IDS.HORIZON_YEARS_INPUT:
      return handleHorizonYearsInput(message, data);

    case STATE_IDS.STARTING_CAPITAL_INPUT:
      return handleStartingCapitalInput(message, data);

    case STATE_IDS.OPS_TRANSFER_INPUT:
      return handleOpsTransferInput(message, data);

    case STATE_IDS.TAX_RATE_SELECTION:
      return handleTaxRateSelection(message, data);

    case STATE_IDS.REINVEST_TAX_SELECTION:
      return handleReinvestTaxSelection(message, data);

    case STATE_IDS.CONFIRMATION:
      return handleConfirmation(message, data);

    default:
      return createStateTransition(
        STATE_IDS.IDLE,
        '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ.',
        createBackToMainKeyboard()
      );
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
 */
function handleIdleState(message) {
  if (message.includes('üí∞ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞')) {
    return createStateTransition(
      STATE_IDS.GENDER_SELECTION,
      'üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è:',
      createGenderKeyboard()
    );
  }

  if (message.includes('üè¶ –ö–∞–ø–∏—Ç–∞–ª –∫ –Ω–∞—á–∞–ª—É –≤—ã–ø–ª–∞—Ç')) {
    return createStateTransition(
      STATE_IDS.GENDER_SELECTION,
      'üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è:',
      createGenderKeyboard()
    );
  }

  if (message.includes('üí∏ –ë–µ–∑ —Ü–µ–ª–∏ ‚Äî —Ä–∞—Å—á—ë—Ç –æ—Ç –≤–∑–Ω–æ—Å–∞')) {
    return createStateTransition(
      STATE_IDS.GENDER_SELECTION,
      'üë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è:',
      createGenderKeyboard()
    );
  }

  return createStateTransition(
    STATE_IDS.IDLE,
    '‚ùì –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ä–∞—Å—á—ë—Ç–∞.',
    createBackToMainKeyboard()
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
 */
function handleGenderSelection(message, data) {
  const validation = validators.gender(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.GENDER_SELECTION,
      `‚ö†Ô∏è ${validation.error}\n\nüë§ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª:`,
      createGenderKeyboard()
    );
  }

  data.gender = validation.value;
  return createStateTransition(
    STATE_IDS.AGE_INPUT,
    'üéÇ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–ø–æ–ª–Ω—ã—Ö –ª–µ—Ç):',
    createBackToMainKeyboard()
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
 */
function handleAgeInput(message, data) {
  const validation = validators.age(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.AGE_INPUT,
      `‚ö†Ô∏è ${validation.error}\n\nüéÇ –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç:`,
      createBackToMainKeyboard()
    );
  }

  data.age = validation.value;
  return createStateTransition(
    STATE_IDS.INCOME_INPUT,
    'üíµ –í–≤–µ–¥–∏—Ç–µ —Å—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥ –¥–æ –ù–î–§–õ (—Ä—É–±/–º–µ—Å):',
    createBackToMainKeyboard()
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–æ—Ö–æ–¥–∞
 */
function handleIncomeInput(message, data) {
  const validation = validators.income(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.INCOME_INPUT,
      `‚ö†Ô∏è ${validation.error}\n\nüíµ –í–≤–µ–¥–∏—Ç–µ –¥–æ—Ö–æ–¥:`,
      createBackToMainKeyboard()
    );
  }

  data.income = validation.value;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è
  // –ü–æ–∫–∞ —á—Ç–æ –¥–ª—è –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —Ä–µ–∂–∏–º–∞ –≤–∑–Ω–æ—Å–æ–≤
  return createStateTransition(
    STATE_IDS.CONTRIBUTION_MODE_SELECTION,
    'üìÖ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –≤–∑–Ω–æ—Å–æ–≤:',
    createContributionModeKeyboard()
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –≤–∑–Ω–æ—Å–æ–≤
 */
function handleContributionModeSelection(message, data) {
  const validation = validators.contributionMode(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.CONTRIBUTION_MODE_SELECTION,
      `‚ö†Ô∏è ${validation.error}\n\nüìÖ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:`,
      createContributionModeKeyboard()
    );
  }

  data.contributionMode = validation.value;

  if (validation.value === CONTRIBUTION_MODE.MONTHLY) {
    return createStateTransition(
      STATE_IDS.MONTHLY_CONTRIBUTION_INPUT,
      'üí∞ –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞ (—Ä—É–±):',
      createBackToMainKeyboard()
    );
  } else {
    return createStateTransition(
      STATE_IDS.ANNUAL_CONTRIBUTION_INPUT,
      'üí∞ –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –µ–∂–µ–≥–æ–¥–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞ (—Ä—É–±):',
      createBackToMainKeyboard()
    );
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞
 */
function handleMonthlyContributionInput(message, data) {
  const validation = validators.monthlyContribution(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.MONTHLY_CONTRIBUTION_INPUT,
      `‚ö†Ô∏è ${validation.error}\n\nüí∞ –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∑–Ω–æ—Å–∞:`,
      createBackToMainKeyboard()
    );
  }

  data.monthlyContribution = validation.value;
  return createStateTransition(
    STATE_IDS.CONFIRMATION,
    '‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞:',
    createConfirmDataInlineKeyboard()
  );
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –µ–∂–µ–≥–æ–¥–Ω–æ–≥–æ –≤–∑–Ω–æ—Å–∞
 */
function handleAnnualContributionInput(message, data) {
  const validation = validators.annualContribution(message);

  if (!validation.isValid) {
    return createStateTransition(
      STATE_IDS.ANNUAL_CONTRIBUTION_INPUT,
      `‚ö†Ô∏è ${validation.error}\n\nüí∞ –í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∑–Ω–æ—Å–∞:`,
      createBackToMainKeyboard()
    );
  }

  data.annualContribution = validation.value;
  return createStateTransition(
    STATE_IDS.CONFIRMATION,
    '‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞:',
    createConfirmDataInlineKeyboard()
  );
}

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–±—É–¥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –≤ —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö)
function handlePayoutStartSelection(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handlePayoutYearsInput(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleDesiredPayoutInput(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleHorizonYearsInput(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleStartingCapitalInput(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleOpsTransferInput(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleTaxRateSelection(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleReinvestTaxSelection(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}

function handleConfirmation(_message, _data) {
  return createStateTransition(STATE_IDS.IDLE, '–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
}
