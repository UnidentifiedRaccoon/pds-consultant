/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
 */

import { generatePdfReportToFile } from '../src/pdf/pdfGenerator.js';
import { logger } from '../src/logger.js';

// –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏
const sampleBotResponse = `üéØ **–¶–µ–ª—å:** —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –≤–∑–Ω–æ—Å –≤ –ü–î–° –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≤—ã–ø–ª–∞—Ç—ã –≤ —Ä–∞–∑–º–µ—Ä–µ 50 000 ‚ÇΩ –≤ –º–µ—Å—è—Ü.

üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞:**
‚Ä¢ –¢—Ä–µ–±—É–µ–º—ã–π –≤–∑–Ω–æ—Å: 10 000 ‚ÇΩ –≤ –º–µ—Å—è—Ü
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑ –∫–∞–ø–∏—Ç–∞–ª–∞ –∫ –Ω–∞—á–∞–ª—É –≤—ã–ø–ª–∞—Ç: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –≤—ã–ø–ª–∞—Ç—ã
‚Ä¢ –û—Ü–µ–Ω–∫–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –≤—ã–ø–ª–∞—Ç—ã –∏–∑ –∫–∞–ø–∏—Ç–∞–ª–∞ (—á–µ—Ä–µ–∑ 270 –º–µ—Å): 50 000 ‚ÇΩ

üéõÔ∏è **–°—Ü–µ–Ω–∞—Ä–∏–∏:**
‚Ä¢ –° —Ä–µ–∏–Ω–≤–µ—Å—Ç–æ–º –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –≤—ã—á–µ—Ç–∞
‚Ä¢ –ë–µ–∑ —Ä–µ–∏–Ω–≤–µ—Å—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –≤—ã—á–µ—Ç–∞

üí° **–ü–æ–¥—Å–∫–∞–∑–∫–∏:**
‚Ä¢ –î–ª—è –º–∞–∫—Å–∏–º—É–º–∞ —Å–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è —É—á–∏—Ç—ã–≤–∞–π—Ç–µ –¥–æ—Ö–æ–¥
‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –û–ü–° –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Å–æ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–∏

‚ö†Ô∏è **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è/—Ä–∏—Å–∫–∏:**
‚Ä¢ –†–∞—Å—á—ë—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ 10%
‚Ä¢ –ì–æ—Ä–∏–∑–æ–Ω—Ç –≤—ã–ø–ª–∞—Ç ‚Äî 270 –º–µ—Å—è—Ü–µ–≤ (22,5 –≥–æ–¥–∞)`;

async function testSimplePdf() {
  try {
    logger.info('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π PDF
    const filePath = await generatePdfReportToFile(sampleBotResponse, './test-simple-output.pdf', {
      filename: 'simple-pension-report',
      reportDate: new Date().toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
      }),
    });

    logger.info('–ü—Ä–æ—Å—Ç–æ–π PDF —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω', { filePath });

    // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º HTML –≤–µ—Ä—Å–∏—é –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const { createSimpleReportHtml } = await import('../src/pdf/simpleParser.js');
    const htmlContent = createSimpleReportHtml(sampleBotResponse, {
      reportDate: new Date().toLocaleDateString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit',
      }),
    });

    const fs = await import('fs/promises');
    await fs.writeFile('./test-simple-output.html', htmlContent);
    logger.info('HTML –≤–µ—Ä—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', { filePath: './test-simple-output.html' });

    console.log('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log(`üìÑ PDF —Ñ–∞–π–ª: ${filePath}`);
    console.log(`üåê HTML —Ñ–∞–π–ª: ./test-simple-output.html`);
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ PDF –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞', {
      error: error.message,
      stack: error.stack,
    });
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSimplePdf();
