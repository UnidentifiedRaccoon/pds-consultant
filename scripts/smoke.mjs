import { getJSON } from '../src/utils/http/index.js';
import { config } from '../src/config/env.js';

(async () => {
  try {
    // –í CI –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–π API, –ª–æ–∫–∞–ª—å–Ω–æ - –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    const isCI = process.env.CI === 'true' || process.env.NODE_ENV === 'production';

    if (isCI) {
      // –í CI –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–π API
      console.log('Testing external API (CI mode)...');
      await getJSON('https://httpbin.org/json');
      console.log(`‚úÖ HTTP test passed: External API is accessible`);
    } else {
      // –õ–æ–∫–∞–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
      const port = process.env.PORT || config.DEV_PORT;
      const healthUrl = `http://localhost:${port}/health`;

      console.log(`Testing local server at ${healthUrl}...`);
      const data = await getJSON(healthUrl);

      if (data.ok === true) {
        console.log(`‚úÖ HTTP test passed: Server is healthy`);
      } else {
        throw new Error(`Unexpected response: ${JSON.stringify(data)}`);
      }
    }
  } catch (e) {
    console.error('‚ùå Smoke test failed:', e.message);
    if (!process.env.CI) {
      console.error('üí° Make sure the server is running with: npm start');
    }
    process.exitCode = 1;
  }
})();
